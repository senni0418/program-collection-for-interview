%include "simple_io.inc"

;;;;with just the display_array

global asm_main
extern rperm

section .data

section .bss
	array: resq 8

section .text

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
display:           ;function to display the array
	enter	0,0
	saveregs
	
	mov rax, array    ;the first parameter "the array"
	mov rbx, rax       ;store the array in rbx
	mov r12, rbx
	mov rcx, qword 1     ;use rcx as counter

LOOP:
	mov	rax, qword [r12]
	call	print_int    ;print the number in the array
	mov	al, ','      
	call	print_char   ;print the comma
	inc	rcx	     ;increase the counter by one
	add	r12, qword 8 ;move the pointer to the next one
	cmp 	rcx, qword 7
	jbe	LOOP
	;the loop prints out 7 elements
out_of_loop:	;print out the last element
	mov	rax, qword [r12]
	call	print_int
	call	print_nl

display_end:
	restoregs
	leave
	ret

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
asm_main:	
	enter	0,0
	saveregs

	mov	rdi, array     ;1st param for rperm
	mov	rsi, qword 8   ;2nd param for rperm
	call rperm

	;; now the array 'array' is randomly initialzed
	;sub 
	;push array
	;mov	rdi, array
	;push rax
	call display
	;pop	r12
	;add	rsp, 8
	;pop 	r12

	restoregs
	leave
	ret
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
