// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 17.1.0 Build 590 10/25/2017 SJ Lite Edition"

// DATE "10/08/2019 03:34:12"

// 
// Device: Altera 5CSEMA5F31C6 Package FBGA896
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module lab2_i (
	x3,
	x2,
	x1,
	x0,
	f0,
	f1,
	f2,
	f3,
	f4,
	f5,
	f6);
input 	x3;
input 	x2;
input 	x1;
input 	x0;
output 	f0;
output 	f1;
output 	f2;
output 	f3;
output 	f4;
output 	f5;
output 	f6;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \f0~output_o ;
wire \f1~output_o ;
wire \f2~output_o ;
wire \f3~output_o ;
wire \f4~output_o ;
wire \f5~output_o ;
wire \f6~output_o ;
wire \x3~input_o ;
wire \x1~input_o ;
wire \x2~input_o ;
wire \x0~input_o ;
wire \f0~0_combout ;
wire \f1~0_combout ;
wire \f2~0_combout ;
wire \f3~0_combout ;
wire \f4~0_combout ;
wire \f5~0_combout ;
wire \f6~0_combout ;


cyclonev_io_obuf \f0~output (
	.i(\f0~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\f0~output_o ),
	.obar());
// synopsys translate_off
defparam \f0~output .bus_hold = "false";
defparam \f0~output .open_drain_output = "false";
defparam \f0~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \f1~output (
	.i(\f1~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\f1~output_o ),
	.obar());
// synopsys translate_off
defparam \f1~output .bus_hold = "false";
defparam \f1~output .open_drain_output = "false";
defparam \f1~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \f2~output (
	.i(\f2~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\f2~output_o ),
	.obar());
// synopsys translate_off
defparam \f2~output .bus_hold = "false";
defparam \f2~output .open_drain_output = "false";
defparam \f2~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \f3~output (
	.i(\f3~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\f3~output_o ),
	.obar());
// synopsys translate_off
defparam \f3~output .bus_hold = "false";
defparam \f3~output .open_drain_output = "false";
defparam \f3~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \f4~output (
	.i(\f4~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\f4~output_o ),
	.obar());
// synopsys translate_off
defparam \f4~output .bus_hold = "false";
defparam \f4~output .open_drain_output = "false";
defparam \f4~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \f5~output (
	.i(\f5~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\f5~output_o ),
	.obar());
// synopsys translate_off
defparam \f5~output .bus_hold = "false";
defparam \f5~output .open_drain_output = "false";
defparam \f5~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \f6~output (
	.i(\f6~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\f6~output_o ),
	.obar());
// synopsys translate_off
defparam \f6~output .bus_hold = "false";
defparam \f6~output .open_drain_output = "false";
defparam \f6~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \x3~input (
	.i(x3),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\x3~input_o ));
// synopsys translate_off
defparam \x3~input .bus_hold = "false";
defparam \x3~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \x1~input (
	.i(x1),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\x1~input_o ));
// synopsys translate_off
defparam \x1~input .bus_hold = "false";
defparam \x1~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \x2~input (
	.i(x2),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\x2~input_o ));
// synopsys translate_off
defparam \x2~input .bus_hold = "false";
defparam \x2~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \x0~input (
	.i(x0),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\x0~input_o ));
// synopsys translate_off
defparam \x0~input .bus_hold = "false";
defparam \x0~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \f0~0 (
// Equation(s):
// \f0~0_combout  = (!\x3~input_o  & (!\x1~input_o  & (!\x2~input_o  $ (!\x0~input_o )))) # (\x3~input_o  & (\x0~input_o  & (!\x1~input_o  $ (!\x2~input_o ))))

	.dataa(!\x3~input_o ),
	.datab(!\x1~input_o ),
	.datac(!\x2~input_o ),
	.datad(!\x0~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\f0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \f0~0 .extended_lut = "off";
defparam \f0~0 .lut_mask = 64'h0894089408940894;
defparam \f0~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \f1~0 (
// Equation(s):
// \f1~0_combout  = (!\x3~input_o  & (\x2~input_o  & (!\x1~input_o  $ (!\x0~input_o )))) # (\x3~input_o  & ((!\x0~input_o  & ((\x2~input_o ))) # (\x0~input_o  & (\x1~input_o ))))

	.dataa(!\x3~input_o ),
	.datab(!\x1~input_o ),
	.datac(!\x2~input_o ),
	.datad(!\x0~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\f1~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \f1~0 .extended_lut = "off";
defparam \f1~0 .lut_mask = 64'h0719071907190719;
defparam \f1~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \f2~0 (
// Equation(s):
// \f2~0_combout  = (!\x3~input_o  & (\x1~input_o  & (!\x2~input_o  & !\x0~input_o ))) # (\x3~input_o  & (\x2~input_o  & ((!\x0~input_o ) # (\x1~input_o ))))

	.dataa(!\x3~input_o ),
	.datab(!\x1~input_o ),
	.datac(!\x2~input_o ),
	.datad(!\x0~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\f2~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \f2~0 .extended_lut = "off";
defparam \f2~0 .lut_mask = 64'h2501250125012501;
defparam \f2~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \f3~0 (
// Equation(s):
// \f3~0_combout  = (!\x1~input_o  & (!\x3~input_o  & (!\x2~input_o  $ (!\x0~input_o )))) # (\x1~input_o  & ((!\x2~input_o  & (\x3~input_o  & !\x0~input_o )) # (\x2~input_o  & ((\x0~input_o )))))

	.dataa(!\x3~input_o ),
	.datab(!\x1~input_o ),
	.datac(!\x2~input_o ),
	.datad(!\x0~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\f3~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \f3~0 .extended_lut = "off";
defparam \f3~0 .lut_mask = 64'h1883188318831883;
defparam \f3~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \f4~0 (
// Equation(s):
// \f4~0_combout  = (!\x1~input_o  & ((!\x2~input_o  & ((\x0~input_o ))) # (\x2~input_o  & (!\x3~input_o )))) # (\x1~input_o  & (!\x3~input_o  & ((\x0~input_o ))))

	.dataa(!\x3~input_o ),
	.datab(!\x1~input_o ),
	.datac(!\x2~input_o ),
	.datad(!\x0~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\f4~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \f4~0 .extended_lut = "off";
defparam \f4~0 .lut_mask = 64'h08EA08EA08EA08EA;
defparam \f4~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \f5~0 (
// Equation(s):
// \f5~0_combout  = (!\x1~input_o  & (\x0~input_o  & (!\x3~input_o  $ (\x2~input_o )))) # (\x1~input_o  & (!\x3~input_o  & ((!\x2~input_o ) # (\x0~input_o ))))

	.dataa(!\x3~input_o ),
	.datab(!\x1~input_o ),
	.datac(!\x2~input_o ),
	.datad(!\x0~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\f5~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \f5~0 .extended_lut = "off";
defparam \f5~0 .lut_mask = 64'h20A620A620A620A6;
defparam \f5~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \f6~0 (
// Equation(s):
// \f6~0_combout  = (!\x0~input_o  & (!\x1~input_o  & (!\x3~input_o  $ (\x2~input_o )))) # (\x0~input_o  & (!\x3~input_o  & (!\x1~input_o  $ (\x2~input_o ))))

	.dataa(!\x3~input_o ),
	.datab(!\x1~input_o ),
	.datac(!\x2~input_o ),
	.datad(!\x0~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\f6~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \f6~0 .extended_lut = "off";
defparam \f6~0 .lut_mask = 64'h8482848284828482;
defparam \f6~0 .shared_arith = "off";
// synopsys translate_on

assign f0 = \f0~output_o ;

assign f1 = \f1~output_o ;

assign f2 = \f2~output_o ;

assign f3 = \f3~output_o ;

assign f4 = \f4~output_o ;

assign f5 = \f5~output_o ;

assign f6 = \f6~output_o ;

endmodule
