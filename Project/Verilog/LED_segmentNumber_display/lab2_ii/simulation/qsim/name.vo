// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 17.1.0 Build 590 10/25/2017 SJ Lite Edition"

// DATE "10/08/2019 03:41:12"

// 
// Device: Altera 5CSEMA5F31C6 Package FBGA896
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module name (
	x4,
	x5,
	x6,
	x7,
	a,
	b,
	c,
	d,
	e,
	f,
	g);
input 	x4;
input 	x5;
input 	x6;
input 	x7;
output 	a;
output 	b;
output 	c;
output 	d;
output 	e;
output 	f;
output 	g;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \a~output_o ;
wire \b~output_o ;
wire \c~output_o ;
wire \d~output_o ;
wire \e~output_o ;
wire \f~output_o ;
wire \g~output_o ;
wire \x4~input_o ;
wire \x6~input_o ;
wire \x7~input_o ;
wire \a~0_combout ;
wire \x5~input_o ;
wire \b~0_combout ;
wire \f~0_combout ;
wire \d~0_combout ;
wire \e~0_combout ;
wire \f~1_combout ;
wire \g~0_combout ;


cyclonev_io_obuf \a~output (
	.i(\a~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\a~output_o ),
	.obar());
// synopsys translate_off
defparam \a~output .bus_hold = "false";
defparam \a~output .open_drain_output = "false";
defparam \a~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \b~output (
	.i(\b~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\b~output_o ),
	.obar());
// synopsys translate_off
defparam \b~output .bus_hold = "false";
defparam \b~output .open_drain_output = "false";
defparam \b~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \c~output (
	.i(\f~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\c~output_o ),
	.obar());
// synopsys translate_off
defparam \c~output .bus_hold = "false";
defparam \c~output .open_drain_output = "false";
defparam \c~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \d~output (
	.i(\d~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\d~output_o ),
	.obar());
// synopsys translate_off
defparam \d~output .bus_hold = "false";
defparam \d~output .open_drain_output = "false";
defparam \d~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \e~output (
	.i(\e~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\e~output_o ),
	.obar());
// synopsys translate_off
defparam \e~output .bus_hold = "false";
defparam \e~output .open_drain_output = "false";
defparam \e~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \f~output (
	.i(!\f~1_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\f~output_o ),
	.obar());
// synopsys translate_off
defparam \f~output .bus_hold = "false";
defparam \f~output .open_drain_output = "false";
defparam \f~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \g~output (
	.i(\g~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\g~output_o ),
	.obar());
// synopsys translate_off
defparam \g~output .bus_hold = "false";
defparam \g~output .open_drain_output = "false";
defparam \g~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \x4~input (
	.i(x4),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\x4~input_o ));
// synopsys translate_off
defparam \x4~input .bus_hold = "false";
defparam \x4~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \x6~input (
	.i(x6),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\x6~input_o ));
// synopsys translate_off
defparam \x6~input .bus_hold = "false";
defparam \x6~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \x7~input (
	.i(x7),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\x7~input_o ));
// synopsys translate_off
defparam \x7~input .bus_hold = "false";
defparam \x7~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \a~0 (
// Equation(s):
// \a~0_combout  = (!\x4~input_o  & (!\x6~input_o  & \x7~input_o ))

	.dataa(!\x4~input_o ),
	.datab(!\x6~input_o ),
	.datac(!\x7~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\a~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \a~0 .extended_lut = "off";
defparam \a~0 .lut_mask = 64'h0808080808080808;
defparam \a~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \x5~input (
	.i(x5),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\x5~input_o ));
// synopsys translate_off
defparam \x5~input .bus_hold = "false";
defparam \x5~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \b~0 (
// Equation(s):
// \b~0_combout  = (!\x4~input_o  & (\x5~input_o  & ((!\x6~input_o ) # (\x7~input_o )))) # (\x4~input_o  & ((!\x6~input_o ) # ((\x7~input_o ))))

	.dataa(!\x4~input_o ),
	.datab(!\x6~input_o ),
	.datac(!\x7~input_o ),
	.datad(!\x5~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\b~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \b~0 .extended_lut = "off";
defparam \b~0 .lut_mask = 64'h45CF45CF45CF45CF;
defparam \b~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \f~0 (
// Equation(s):
// \f~0_combout  = (!\x6~input_o  & (!\x7~input_o  & !\x5~input_o ))

	.dataa(!\x6~input_o ),
	.datab(!\x7~input_o ),
	.datac(!\x5~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\f~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \f~0 .extended_lut = "off";
defparam \f~0 .lut_mask = 64'h8080808080808080;
defparam \f~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \d~0 (
// Equation(s):
// \d~0_combout  = (!\x5~input_o  & (((\x7~input_o ) # (\x6~input_o )))) # (\x5~input_o  & (\x4~input_o ))

	.dataa(!\x4~input_o ),
	.datab(!\x6~input_o ),
	.datac(!\x7~input_o ),
	.datad(!\x5~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\d~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \d~0 .extended_lut = "off";
defparam \d~0 .lut_mask = 64'h3F553F553F553F55;
defparam \d~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \e~0 (
// Equation(s):
// \e~0_combout  = (\x6~input_o  & (\x7~input_o  & \x5~input_o ))

	.dataa(!\x6~input_o ),
	.datab(!\x7~input_o ),
	.datac(!\x5~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\e~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \e~0 .extended_lut = "off";
defparam \e~0 .lut_mask = 64'h0101010101010101;
defparam \e~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \f~1 (
// Equation(s):
// \f~1_combout  = (((\x5~input_o ) # (\x7~input_o )) # (\x6~input_o )) # (\x4~input_o )

	.dataa(!\x4~input_o ),
	.datab(!\x6~input_o ),
	.datac(!\x7~input_o ),
	.datad(!\x5~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\f~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \f~1 .extended_lut = "off";
defparam \f~1 .lut_mask = 64'h7FFF7FFF7FFF7FFF;
defparam \f~1 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \g~0 (
// Equation(s):
// \g~0_combout  = (!\x7~input_o  & (!\x4~input_o  & ((\x5~input_o )))) # (\x7~input_o  & (((\x6~input_o  & !\x5~input_o ))))

	.dataa(!\x4~input_o ),
	.datab(!\x6~input_o ),
	.datac(!\x7~input_o ),
	.datad(!\x5~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\g~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \g~0 .extended_lut = "off";
defparam \g~0 .lut_mask = 64'h03A003A003A003A0;
defparam \g~0 .shared_arith = "off";
// synopsys translate_on

assign a = \a~output_o ;

assign b = \b~output_o ;

assign c = \c~output_o ;

assign d = \d~output_o ;

assign e = \e~output_o ;

assign f = \f~output_o ;

assign g = \g~output_o ;

endmodule
